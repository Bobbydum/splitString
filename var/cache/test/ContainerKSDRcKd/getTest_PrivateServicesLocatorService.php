<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'test.private_services_locator' shared service.

return $this->services['test.private_services_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, array(
    'App\\Command\\ComputeMultiplicityCommand' => array('privates', 'App\\Command\\ComputeMultiplicityCommand', 'getComputeMultiplicityCommandService.php', true),
    'App\\Service\\CombineService' => array('privates', 'App\\Service\\CombineService', 'getCombineServiceService.php', true),
    'Psr\\Cache\\CacheItemPoolInterface' => array('services', 'cache.app', 'getCache_AppService.php', true),
    'Psr\\Container\\ContainerInterface' => array('services', 'service_container', 'getServiceContainerService.php', true),
    'Psr\\Container\\ContainerInterface $parameterBag' => array('privates', 'parameter_bag', 'getParameterBagService', false),
    'Psr\\Log\\LoggerInterface' => array('privates', 'logger', 'getLoggerService', false),
    'Symfony\\Component\\Cache\\Adapter\\AdapterInterface' => array('services', 'cache.app', 'getCache_AppService.php', true),
    'Symfony\\Component\\DependencyInjection\\ContainerInterface' => array('services', 'service_container', 'getServiceContainerService.php', true),
    'Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface' => array('privates', 'parameter_bag', 'getParameterBagService', false),
    'Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface' => array('privates', 'parameter_bag', 'getParameterBagService', false),
    'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => array('services', 'event_dispatcher', 'getEventDispatcherService', false),
    'Symfony\\Component\\Filesystem\\Filesystem' => array('services', 'filesystem', 'getFilesystemService.php', true),
    'Symfony\\Component\\HttpFoundation\\RequestStack' => array('services', 'request_stack', 'getRequestStackService', false),
    'Symfony\\Component\\HttpFoundation\\Session\\Flash\\FlashBagInterface' => array('privates', 'session.flash_bag', 'getSession_FlashBagService.php', true),
    'Symfony\\Component\\HttpFoundation\\Session\\SessionInterface' => array('services', 'session', 'getSessionService.php', true),
    'Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface' => array('privates', 'session.storage.mock_file', 'getSession_Storage_MockFileService.php', true),
    'Symfony\\Component\\HttpKernel\\Config\\FileLocator' => array('privates', 'file_locator', 'getFileLocatorService.php', true),
    'Symfony\\Component\\HttpKernel\\Debug\\FileLinkFormatter' => array('privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', false),
    'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => array('services', 'http_kernel', 'getHttpKernelService', false),
    'Symfony\\Component\\HttpKernel\\KernelInterface' => array('services', 'kernel', 'getKernelService', false),
    'Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface' => array('services', 'router', 'getRouterService', false),
    'Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface' => array('services', 'router', 'getRouterService', false),
    'Symfony\\Component\\Routing\\RequestContext' => array('privates', 'router.request_context', 'getRouter_RequestContextService', false),
    'Symfony\\Component\\Routing\\RequestContextAwareInterface' => array('services', 'router', 'getRouterService', false),
    'Symfony\\Component\\Routing\\RouterInterface' => array('services', 'router', 'getRouterService', false),
    'Symfony\\Contracts\\Cache\\CacheInterface' => array('services', 'cache.app', 'getCache_AppService.php', true),
    'argument_metadata_factory' => array('privates', 'argument_metadata_factory', 'getArgumentMetadataFactoryService', false),
    'argument_resolver' => array('privates', 'argument_resolver', 'getArgumentResolverService', false),
    'argument_resolver.controller_locator' => array('privates', '.service_locator.9_yeNH1', 'get_ServiceLocator_9YeNH1Service.php', true),
    'argument_resolver.default' => array('privates', 'argument_resolver.default', 'getArgumentResolver_DefaultService.php', true),
    'argument_resolver.request' => array('privates', 'argument_resolver.request', 'getArgumentResolver_RequestService.php', true),
    'argument_resolver.request_attribute' => array('privates', 'argument_resolver.request_attribute', 'getArgumentResolver_RequestAttributeService.php', true),
    'argument_resolver.service' => array('privates', 'argument_resolver.service', 'getArgumentResolver_ServiceService.php', true),
    'argument_resolver.session' => array('privates', 'argument_resolver.session', 'getArgumentResolver_SessionService.php', true),
    'argument_resolver.variadic' => array('privates', 'argument_resolver.variadic', 'getArgumentResolver_VariadicService.php', true),
    'cache.default_clearer' => array('services', 'cache.app_clearer', 'getCache_AppClearerService.php', true),
    'cache.default_marshaller' => array('privates', 'cache.default_marshaller', 'getCache_DefaultMarshallerService.php', true),
    'config.resource.self_checking_resource_checker' => array('privates', 'config.resource.self_checking_resource_checker', 'getConfig_Resource_SelfCheckingResourceCheckerService.php', true),
    'config_cache_factory' => array('privates', 'config_cache_factory', 'getConfigCacheFactoryService', false),
    'console.command.about' => array('privates', 'console.command.about', 'getConsole_Command_AboutService.php', true),
    'console.command.assets_install' => array('privates', 'console.command.assets_install', 'getConsole_Command_AssetsInstallService.php', true),
    'console.command.cache_clear' => array('privates', 'console.command.cache_clear', 'getConsole_Command_CacheClearService.php', true),
    'console.command.cache_pool_clear' => array('privates', 'console.command.cache_pool_clear', 'getConsole_Command_CachePoolClearService.php', true),
    'console.command.cache_pool_delete' => array('privates', 'console.command.cache_pool_delete', 'getConsole_Command_CachePoolDeleteService.php', true),
    'console.command.cache_pool_prune' => array('privates', 'console.command.cache_pool_prune', 'getConsole_Command_CachePoolPruneService.php', true),
    'console.command.cache_warmup' => array('privates', 'console.command.cache_warmup', 'getConsole_Command_CacheWarmupService.php', true),
    'console.command.config_debug' => array('privates', 'console.command.config_debug', 'getConsole_Command_ConfigDebugService.php', true),
    'console.command.config_dump_reference' => array('privates', 'console.command.config_dump_reference', 'getConsole_Command_ConfigDumpReferenceService.php', true),
    'console.command.container_debug' => array('privates', 'console.command.container_debug', 'getConsole_Command_ContainerDebugService.php', true),
    'console.command.debug_autowiring' => array('privates', 'console.command.debug_autowiring', 'getConsole_Command_DebugAutowiringService.php', true),
    'console.command.event_dispatcher_debug' => array('privates', 'console.command.event_dispatcher_debug', 'getConsole_Command_EventDispatcherDebugService.php', true),
    'console.command.router_debug' => array('privates', 'console.command.router_debug', 'getConsole_Command_RouterDebugService.php', true),
    'console.command.router_match' => array('privates', 'console.command.router_match', 'getConsole_Command_RouterMatchService.php', true),
    'console.command.yaml_lint' => array('privates', 'console.command.yaml_lint', 'getConsole_Command_YamlLintService.php', true),
    'console.error_listener' => array('privates', 'console.error_listener', 'getConsole_ErrorListenerService.php', true),
    'controller_name_converter' => array('privates', 'controller_name_converter', 'getControllerNameConverterService', false),
    'controller_resolver' => array('privates', 'controller_resolver', 'getControllerResolverService', false),
    'debug.debug_handlers_listener' => array('privates', 'debug.debug_handlers_listener', 'getDebug_DebugHandlersListenerService', false),
    'debug.file_link_formatter' => array('privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', false),
    'dependency_injection.config.container_parameters_resource_checker' => array('privates', 'dependency_injection.config.container_parameters_resource_checker', 'getDependencyInjection_Config_ContainerParametersResourceCheckerService.php', true),
    'file_locator' => array('privates', 'file_locator', 'getFileLocatorService.php', true),
    'http_exception_listener' => array('privates', 'http_exception_listener', 'getHttpExceptionListenerService.php', true),
    'locale_listener' => array('privates', 'locale_listener', 'getLocaleListenerService', false),
    'logger' => array('privates', 'logger', 'getLoggerService', false),
    'parameter_bag' => array('privates', 'parameter_bag', 'getParameterBagService', false),
    'resolve_controller_name_subscriber' => array('privates', 'resolve_controller_name_subscriber', 'getResolveControllerNameSubscriberService', false),
    'response_listener' => array('privates', 'response_listener', 'getResponseListenerService', false),
    'router.cache_warmer' => array('privates', 'router.cache_warmer', 'getRouter_CacheWarmerService.php', true),
    'router.default' => array('services', 'router', 'getRouterService', false),
    'router.request_context' => array('privates', 'router.request_context', 'getRouter_RequestContextService', false),
    'router_listener' => array('privates', 'router_listener', 'getRouterListenerService', false),
    'routing.loader.directory' => array('privates', 'routing.loader.directory', 'getRouting_Loader_DirectoryService.php', true),
    'routing.loader.glob' => array('privates', 'routing.loader.glob', 'getRouting_Loader_GlobService.php', true),
    'routing.loader.php' => array('privates', 'routing.loader.php', 'getRouting_Loader_PhpService.php', true),
    'routing.loader.service' => array('privates', 'routing.loader.service', 'getRouting_Loader_ServiceService.php', true),
    'routing.loader.xml' => array('privates', 'routing.loader.xml', 'getRouting_Loader_XmlService.php', true),
    'routing.loader.yml' => array('privates', 'routing.loader.yml', 'getRouting_Loader_YmlService.php', true),
    'routing.resolver' => array('privates', 'routing.resolver', 'getRouting_ResolverService.php', true),
    'session.attribute_bag' => array('privates', 'session.attribute_bag', 'getSession_AttributeBagService.php', true),
    'session.flash_bag' => array('privates', 'session.flash_bag', 'getSession_FlashBagService.php', true),
    'session.storage' => array('privates', 'session.storage.mock_file', 'getSession_Storage_MockFileService.php', true),
    'session.storage.filesystem' => array('privates', 'session.storage.mock_file', 'getSession_Storage_MockFileService.php', true),
    'session.storage.metadata_bag' => array('privates', 'session.storage.metadata_bag', 'getSession_Storage_MetadataBagService.php', true),
    'session.storage.mock_file' => array('privates', 'session.storage.mock_file', 'getSession_Storage_MockFileService.php', true),
    'session_listener' => array('privates', 'session_listener', 'getSessionListenerService', false),
    'streamed_response_listener' => array('privates', 'streamed_response_listener', 'getStreamedResponseListenerService', false),
    'test.session.listener' => array('privates', 'test.session.listener', 'getTest_Session_ListenerService', false),
    'validate_request_listener' => array('privates', 'validate_request_listener', 'getValidateRequestListenerService', false),
));
